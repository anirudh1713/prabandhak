interface User {
  firstName: String!
  lastName: String!
  email: String!
  createdAt: String
  updatedAt: String
}

type Viewer implements User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  createdAt: String
  updatedAt: String
}

input RegisterUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

type RegisterUserPayload {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  createdAt: String
  updatedAt: String
}

type Query {
  me(id: ID!): Viewer
}

type Mutation {
  registerUser(registerUserInput: RegisterUserInput!): RegisterUserPayload
}
